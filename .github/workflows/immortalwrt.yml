name: make_immortalwrt_firmware

on:
 #schedule:
   # - cron: 0 0 * * *  
 workflow_dispatch:
    inputs:
      device:
        type: choice
        default: 'friendlyarm_nanopi-r2s'
        required: true
        description: |
          输入 软路由型号 可选值如下：
        options:
          - ariaboard_photonicat
          - armsom_sige3
          - armsom_sige7
          - cyber_cyber3588-aib
          - ezpro_mrkaio-m68s
          - firefly_roc-rk3328-cc
          - firefly_roc-rk3568-pc
          - friendlyarm_nanopc-t4
          - friendlyarm_nanopc-t6
          - friendlyarm_nanopi-r2c
          - friendlyarm_nanopi-r2c-plus
          - friendlyarm_nanopi-r2s
          - friendlyarm_nanopi-r3s
          - friendlyarm_nanopi-r4s
          - friendlyarm_nanopi-r4se
          - friendlyarm_nanopi-r4s-enterprise
          - friendlyarm_nanopi-r5c
          - friendlyarm_nanopi-r5s
          - friendlyarm_nanopi-r6c
          - friendlyarm_nanopi-r6s
          - huake_guangmiao-g4c
          - lunzn_fastrhino-r66s
          - lunzn_fastrhino-r68s
          - lyt_t68m
          - pine64_rock64
          - pine64_rockpro64
          - radxa_cm3_io
          - radxa_e25
          - radxa_rock-3a
          - radxa_rock-3b
          - radxa_rock-3c
          - radxa_rock-5a
          - radxa_rock-5b
          - radxa_rock-pi-4a
          - radxa_rock-pi-e
          - radxa_rock-pi-s
          - radxa_zero-3e
          - radxa_zero-3w
          - sinovoip_bpi-r2-pro
          - xunlong_orangepi-5
          - xunlong_orangepi-5-plus
          - xunlong_orangepi-r1-plus
          - xunlong_orangepi-r1-plus-lts

jobs: 

  build_packages:
    name: build r2s firmware
    runs-on: ubuntu-latest
    steps:
      - name: setup1
        run: |       
                sudo apt-get -qq install  -y --no-install-recommends ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
                bzip2 ccache clang cmake cpio curl device-tree-compiler flex gawk gcc-multilib g++-multilib gettext \
                genisoimage git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev \
                libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev \
                libreadline-dev libssl-dev libtool llvm lrzsz msmtp ninja-build p7zip p7zip-full patch pkgconf \
                python3 python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion \
                swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
          
      - name: checkout
        uses: actions/checkout@main
      
      - name: Create simulated physical disk
        run: |
         mnt_size=$(expr $(df -h /mnt | tail -1 | awk '{print $4}' | sed 's/[[:alpha:]]//g' | sed 's/\..*//') - 1)
         root_size=$(expr $(df -h / | tail -1 | awk '{print $4}' | sed 's/[[:alpha:]]//g' | sed 's/\..*//') - 2)
         sudo truncate -s "${mnt_size}"G /mnt/mnt.img
         sudo truncate -s "${root_size}"G /root.img
         sudo losetup /dev/loop6 /mnt/mnt.img
         sudo losetup /dev/loop7 /root.img
         sudo pvcreate /dev/loop6
         sudo pvcreate /dev/loop7
         sudo vgcreate github /dev/loop6 /dev/loop7
         sudo lvcreate -n runner -l 100%FREE github
         sudo mkfs.xfs /dev/github/runner
         sudo mkdir -p /builder
         sudo mount /dev/github/runner /builder
         sudo chown -R runner:runner /builder
         df -Th && lscpu && free -h && sudo swapoff -a
      - name: setup2
        run: |            
                  git clone  --depth 1  https://github.com/immortalwrt/immortalwrt /builder/lede 
      - name: setup3
        run: |
                  cd /builder/lede
                  #echo "src-git smpackage https://github.com/kenzok8/small-package.git" >feeds.conf.default
                  ./scripts/feeds update -a
                  ./scripts/feeds install -a
      - name: st9
        run: |
              cd /builder/lede
              rm -rf feeds/packages/lang/golang
              git clone https://github.com/sbwml/packages_lang_golang -b 24.x feeds/packages/lang/golang
              BOARD=${{github.event.inputs.device}}
              cat $GITHUB_WORKSPACE/rockchip/immwrt.config >.config
              echo "CONFIG_TARGET_rockchip_armv8_DEVICE_$BOARD=y" >>.config
              . $GITHUB_WORKSPACE/rockchip/config.sh
              make defconfig && make -j`nproc` download
                
      - name: st10
        run: |
                  cd /builder/lede
                  make -j`nproc`
                  echo "strDate=$(TZ=UTC-8 date +%m-%d-%H-%M)" >> $GITHUB_ENV
                  mkdir -p $GITHUB_WORKSPACE/release/
                  mv -v ./bin/targets/*/*/*.img.gz  $GITHUB_WORKSPACE/release/ || true
                  # mv -v ./bin/targets/*/*/*imagebuilder*  $GITHUB_WORKSPACE/release/ || true
      - name: Upload release asset
        uses: softprops/action-gh-release@v2.2.1
        with: 
          tag_name: autobiu         
          name:  自动发布 immortalwrt 固件
          files: |
              ./release/* 
          token: ${{ secrets.GITHUB_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
